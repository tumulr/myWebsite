---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import CodeSnippet from '../../components/CodeSnippet.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout>
  <div class="scroll-indicator-container">
    <div class="scroll-indicator"></div>
  </div>
  
  <article class="blog-post">
    <div class="post-header">
      <h1>{entry.data.title}</h1>
      <p class="post-date">{entry.data.date}</p>
      <a href="/blog" class="back-to-blogs">‚Üê Back to all posts</a>
    </div>
    
    <div class="post-content">
      <Content />
    </div>
  </article>
</Layout>

<style>
  .scroll-indicator-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background-color: #f0f0f0;
    z-index: 1000;
  }

  .scroll-indicator {
    height: 100%;
    width: 0;
    background-color: #0066cc;
    transition: width 0.1s ease;
  }

  .blog-post {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  .post-header {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #eee;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    color: #333;
  }

  .post-date {
    color: #666;
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }

  .back-to-blogs {
    display: inline-block;
    margin-top: 1rem;
    color: #0066cc;
    text-decoration: none;
  }

  .back-to-blogs:hover {
    text-decoration: underline;
  }

  .post-content {
    line-height: 1.6;
  }

  .post-content img {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 2rem auto;
    border-radius: 6px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  .post-content h2 {
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .post-content p {
    margin-bottom: 1.5rem;
  }

  .post-content ul {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .post-content li {
    margin-bottom: 0.5rem;
  }

  /* Enhanced code block styling */
  .post-content pre {
    background-color: #2d2d2d;
    color: #e6e6e6;
    padding: 1.25rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 1.5rem 0;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .post-content code {
    font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;
    font-size: 0.9rem;
    line-height: 1.6;
  }

  .post-content :not(pre) > code {
    background-color: #f0f0f0;
    color: #d63384;
    padding: 0.2em 0.4em;
    border-radius: 3px;
    white-space: nowrap;
  }
</style>

<script>
  // Update scroll indicator width based on scroll position
  function updateScrollIndicator() {
    const windowHeight = window.innerHeight;
    const documentHeight = document.documentElement.scrollHeight - windowHeight;
    const scrollPosition = window.scrollY;
    const scrollPercentage = (scrollPosition / documentHeight) * 100;
    
    const scrollIndicator = document.querySelector('.scroll-indicator') as HTMLElement;
    if (scrollIndicator) {
      scrollIndicator.style.width = `${scrollPercentage}%`;
    }
  }

  // Add scroll event listener
  window.addEventListener('scroll', updateScrollIndicator);
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', updateScrollIndicator);
</script>